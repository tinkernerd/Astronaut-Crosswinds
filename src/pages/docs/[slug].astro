---
import { type CollectionEntry, getCollection, render } from "astro:content";
import { GithubRepo } from "@/site-config";

// import components
import DocsLayout from "../../layouts/DocsLayout.astro";

export async function getStaticPaths() {
  const allDocs = await getCollection("docs");
  return allDocs.map((docs) => ({
    params: { slug: docs.id },
    props: docs,
  }));
}
type Props = CollectionEntry<"docs">;
const AllDocs = await getCollection("docs");

const docs = Astro.props;
const { Content, headings } = await render(docs);

const { title, description, excerpt, banner, topics = [], category } = docs.data;
const relatedDocs = AllDocs.filter((post) => {
    if (!post.data || !Array.isArray(post.data.topics) || !Array.isArray(docs.data.topics)) {
      return false;
    }

    // Check if there is at least one shared topic
    const hasMatchingTopics = post.data.topics.some((t) => docs.data.topics.includes(t));

    return post.data.title !== title && hasMatchingTopics;
  }) 
  .map((post) => ({
    id: post.id, // Use `id` instead of `slug`
    data: { title: post.data.title ?? "Untitled" }
  }))
  .sort((a, b) => a.data.title.localeCompare(b.data.title)) // Sort alphabetically
  .slice(0, 3); // Limit to 3 results

const EDIT_URL = GithubRepo.editUrl;
const currentPage = Astro.url.pathname;
const currentFile = `src/content${currentPage.replace(/\/$/, "")}.md`;
const editUrl = `${EDIT_URL}/${currentFile}`;


---

<DocsLayout {title} {description} {editUrl} {excerpt} {banner} {headings} {relatedDocs} {topics} {category}>
    <Content />
</DocsLayout>